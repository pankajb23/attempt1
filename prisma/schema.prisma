// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Store {
  id                       String           @id @default(uuid()) // id for local storage.
  shopId                   String           @unique // a unique shopify id. 
  name                     String
  contactEmail             String
  createdAt                DateTime
  offers                   Offer[]
  helpModals               HelpModals?
  widgets                  Widget[]
  isMetaObjectsInitialized Boolean          @default(false)
  isUninstalled            Boolean          @default(false)
  currencyFormatId         Int // Foreign key to CurrencyFormat
  currencyCode             CurrencyFormat?  @relation(fields: [currencyFormatId], references: [id])
  sample                   String @default("")
  // shopAccessToken          String? // TODO
}

model HelpModals {
  id                  String  @id @default(uuid())
  storeId             String  @unique
  store               Store   @relation(fields: [storeId], references: [id])
  mainPageModalState  Boolean @default(true) // true means show otherwise hide
  offerPageModalState Boolean @default(true) // true means show otherwise hide
}

model Offer {
  offerId      String      @id @default(uuid())
  storeId      String
  store        Store       @relation(fields: [storeId], references: [id]) //Foreign key
  offerName    String
  offerType    String
  offerContent String?
  status       String      @default("active")
  createdAt    DateTime    @default(now())
  Discounts    Discounts[]

  @@unique([storeId, offerName])
}

model Discounts {
  id           String    @id @default(uuid())
  offerId      String
  offer        Offer     @relation(fields: [offerId], references: [offerId])
  discountCode String
  discountId   String
  startDate    DateTime?
  endDate      DateTime?
}

model Widget {
  id      Int     @id @default(autoincrement())
  storeId String
  store   Store   @relation(fields: [storeId], references: [id])
  handle  String?
  type    String
  content String

  @@unique([storeId, type])
}

model CurrencyFormat {
  id             Int     @id @default(autoincrement())
  currencyCode   String  @unique
  currencySymbol String
  currencyFormat String
  stores         Store[]
}


